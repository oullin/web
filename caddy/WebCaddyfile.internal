:80 {
    @relay_get {
        path /relay/*
        method GET
    }

    handle @relay_get {
        respond 405
    }

    # Strip /relay and forward to API mTLS gateway
    handle_path /relay/* {
        rewrite * /api{path}

        reverse_proxy https://oullin_proxy_prod:8443 {

            header_up Host oullin_proxy_prod

            transport http {
                tls
                tls_server_name oullin_proxy_prod
                tls_client_auth /etc/caddy/mtls/client.pem /etc/caddy/mtls/client.key
                tls_trust_pool file /etc/caddy/mtls/ca.pem
            }
        }
    }

    # --- Normalise trailing slashes ("/about/" -> "/about")
    # --- begin

    @has_trailing path_regexp trailing ^/(.+)/$

    @has_trailing_with_query {
      path_regexp trailing ^/(.+)/$
      expression {query} != ""
    }

    redir @has_trailing_with_query /{re.trailing.1}?{query} 308
    redir @has_trailing /{re.trailing.1} 308

    # --- end

    # Block direct access to the SEO folder (serve only via internal rewrites)
    handle_path /seo/* {
        respond 404
    }

    # Static SPA
    handle {
        root * /usr/share/caddy

        # Try SEO flat files first, then SPA files
        try_files \
            /seo{path}.seo.html \
            /seo/index.seo.html \
            {path} \
            {path}/index.html \
            /index.html

        encode zstd gzip
        file_server

        # Long cache for immutable assets
        @assets path /assets/* /images/*
        header @assets Cache-Control "public, max-age=31536000, immutable"

        # Explicit caching for common top-level files
        @favicon path /favicon.ico
        header @favicon Cache-Control "public, max-age=31536000, immutable"

        @robots path /robots.txt
        header @robots Cache-Control "public, max-age=300"

        # Short cache for HTML and pretty routes
        @html {
            not path /assets/*
            not path /images/*
            not path /relay/*
            not path /seo/*
        }

        header @html Cache-Control "public, max-age=300, stale-while-revalidate=60"

        # Security headers
        header {
            Referrer-Policy "strict-origin-when-cross-origin"
            X-Content-Type-Options "nosniff"
            X-Frame-Options "SAMEORIGIN"
        }
    }

    log {
        output stdout
        format json
    }
}
